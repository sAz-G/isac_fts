%% predefined hyper parameters for the algorithm
% below the used units are provided. Using known already units.
% Hz (Hertz), s (seconds), m (meters), dB (deziBel)

%% Communication model parameters

params = struct('sim', ...
                   {struct( ... % parameters from table 1 in the paper and other few params
                           'alpha_0'   ,{db2pow(-50)},                  ...
                           'N_0'       ,{db2pow(-170)*1e-3},            ...
                           'P'         ,{db2pow(20)*1e-3},              ...
                           'B'         ,{1e06},                         ...
                           'G_p'       ,{0.1*1e06},                     ... % 0.1 * B
                           'sigma_0'   ,{sqrt(1e06*db2pow(-170)*1e-3)}, ... % sqrt(B * N_0)
                           'H'         ,{200},                          ...
                           'V_str'     ,{20},                           ...
                           'L_x'       ,{1500},                         ...
                           'L_y'       ,{1500},                         ...
                           'T_f'       ,{1.5},                          ...
                           'T_h'       ,{1},                            ...
                           'beta_0'    ,{db2pow(-47)},                  ...
                           'V_max'     ,{30},                           ...
                           'mu'        ,{5},                            ...
                           'eta'       ,{1},                            ...
                           'iter'      ,{5},                            ...
                           'a'         ,{10},                           ...
                           'w_star'    ,{0.2},                          ...
                           'N_stg'     ,{25},                           ...
                           'K_stg'     ,{floor(25/5)},                   ...
                           'N_tot'     ,{nan},                         ...
                           'M'         ,{nan},                           ...
                           'K_tot'     ,{nan}                           ...
                          )}, ... % end of simulation parameters (sim)
                'energy', ...
                   {struct(...
                           'P_0'       , {80},      ...
                           'U_tip'     , {120},     ...
                           'D_0'       , {0.6},     ...
                           'rho'       , {1.225},   ...
                           'P_I'       , {88.6},    ...
                           'v_0'       , {4.03},    ...
                           's'         , {0.05},    ...
                           'A'         , {0.503}    ...
                           )}...
               ); % end params 

setup = struct('base_station_pos', {[100; 100]},            ...
               'comm_user_pos',    {[1.3e3; 1.2e3]},            ...
               'est_sense_target', {[200; 1.3e3]},            ...
               'sense_target_pos', {[1200; 100]},             ...
               'total_energy',     {30e3}             ...
               );


results = struct(   'R_opt_vecs', {nan},            ...
                    'CRB_opt_vecs',    {nan},            ...
                    'xi_m_vec', {nan},            ...
                    'delta_m_vec', {nan},             ...
                    'E_used_vec', {nan},            ...
                    'E_m_vec',    {nan},            ...
                    'E_min_vec',  {nan},            ...
                    'S_target_est_mat', {nan},       ...
                    'S_opt_mat',        {nan},     ...
                    'S_init_mat',       {nan},     ...
                    'V_m_mat',          {nan},     ...
                    'K_tot',           {nan},     ...       
                    'N_tot',           {nan},     ...       
                    'M',           {nan}     ...       
                );
